import streamlit as st
from streamlit_option_menu import option_menu
import login # Importa nosso novo script de login
from pages import (
    alocar_servicos,
    cadastro_servico,
    cadastro_veiculo,
    filas_servico,
    visao_boxes,
    servicos_concluidos,
    historico_veiculo,
    gerenciar_usuarios # Importa a nova p치gina
)

# Configura칞칚o da p치gina
st.set_page_config(
    page_title="Controle de P치tio PRO", 
    page_icon="游뚴",
    layout="wide"
)

# --- VERIFICA칂츾O DE LOGIN ---
# Se 'logged_in' n칚o for True na mem칩ria da sess칚o, mostra a tela de login.
if not st.session_state.get('logged_in'):
    login.render_login_page()
    st.stop() # Para a execu칞칚o aqui para n칚o mostrar o resto do app

# --- APLICATIVO PRINCIPAL (S칍 APARECE AP칍S LOGIN) ---

# Adiciona um menu lateral apenas para o nome do usu치rio e o bot칚o de logout
with st.sidebar:
    st.success(f"Logado como: **{st.session_state.get('user_name')}**")
    if st.button("Logout", use_container_width=True, type="secondary"):
        for key in st.session_state.keys():
            del st.session_state[key]
        st.rerun()

# --- L칍GICA DE MENU DIN츽MICO ---
# Define as op칞칫es e 칤cones padr칚o para todos os usu치rios
options = ["Alocar Servi칞os", "Cadastro de Servi칞o", "Filas de Servi칞o", "Vis칚o dos Boxes", "Servi칞os Conclu칤dos", "Hist칩rico por Ve칤culo"]
icons = ["truck-front", "card-list", "card-checklist", "view-stacked", "check-circle", "clock-history"]

# Se o usu치rio for um admin, adiciona a op칞칚o de gerenciar usu치rios ao menu
if st.session_state.get('user_role') == 'admin':
    options.append("Gerenciar Usu치rios")
    icons.append("people-fill") # 칈cone para gerenciamento de usu치rios

selected_page = option_menu(
    menu_title=None,
    options=options, # Usa a lista de op칞칫es din칙mica
    icons=icons,     # Usa a lista de 칤cones din칙mica
    menu_icon="cast",
    default_index=0,
    orientation="horizontal",
    styles={
        "container": {"padding": "0!important", "background-color": "#292929"},
        "icon": {"color": "#22a7f0", "font-size": "25px"},
        "nav-link": {
            "font-size": "16px",
            "text-align": "center",
            "margin":"0px",
            "--hover-color": "#444",
            "padding": "10px 0px"
        },
        "nav-link-selected": {"background-color": "#1a1a1a"},
        # --- AJUSTE FINAL APLICADO AQUI ---
        # Esconde o texto dos bot칫es, deixando s칩 os 칤cones, como no design anterior
        ".nav-link-text": {"display": "none"}
    }
)

# L칩gica para exibir a p치gina selecionada
if selected_page == "Alocar Servi칞os":
    alocar_servicos.alocar_servicos()
elif selected_page == "Cadastro de Servi칞o":
    cadastro_servico.app()
elif selected_page == "Cadastro de Ve칤culo":
    cadastro_veiculo.app()
elif selected_page == "Filas de Servi칞o":
    filas_servico.app()
elif selected_page == "Vis칚o dos Boxes":
    visao_boxes.visao_boxes()
elif selected_page == "Servi칞os Conclu칤dos":
    servicos_concluidos.app()
elif selected_page == "Hist칩rico por Ve칤culo":
    historico_veiculo.app()
elif selected_page == "Gerenciar Usu치rios":
    gerenciar_usuarios.app()